1:"$Sreact.fragment"
2:I[5803,[],""]
3:I[695,[],""]
5:I[2576,[],"OutletBoundary"]
7:I[2576,[],"MetadataBoundary"]
9:I[2576,[],"ViewportBoundary"]
b:I[7614,[],""]
:HL["/_next/static/css/c3b55921f92a131e.css","style"]
0:{"P":null,"b":"n66w3jQXdD0TOkFlxRfSe","p":"","c":["","2025","01","kubestronaut-in-2024"],"i":false,"f":[[["",{"children":["(posts)",{"children":[["year","2025","d"],{"children":[["month","01","d"],{"children":[["slug","kubestronaut-in-2024","d"],{"children":["__PAGE__",{}]}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c3b55921f92a131e.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"children":["$","body",null,{"className":"antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}],{"children":["(posts)",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:notFound:1:1:props:style","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:notFound:1:1:props:children:props:children:1:props:style","children":404}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:notFound:1:1:props:children:props:children:2:props:style","children":["$","h2",null,{"style":"$0:f:0:1:1:props:children:1:props:children:props:children:props:notFound:1:1:props:children:props:children:2:props:children:props:style","children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["year","2025","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["month","01","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children","$0:f:0:1:2:children:2:children:0","children","$0:f:0:1:2:children:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","kubestronaut-in-2024","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","(posts)","children","$0:f:0:1:2:children:2:children:0","children","$0:f:0:1:2:children:2:children:2:children:0","children","$0:f:0:1:2:children:2:children:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",null,["$","$L5",null,{"children":"$L6"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","5EXtJXekvr2T_ajXrXHP1",{"children":[["$","$L7",null,{"children":"$L8"}],["$","$L9",null,{"children":"$La"}],null]}]]}],false]],"m":"$undefined","G":["$b","$undefined"],"s":false,"S":true}
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Mayo Rocks!"}],["$","meta","2",{"name":"description","content":"Mayo's Blog"}],["$","link","3",{"rel":"icon","href":"/icon.png?14d5a92fbe70e82a","type":"image/png","sizes":"460x460"}]]
6:null
c:T2ea3,<p>In 2024, I received the Kubestronaut certification and achieved the 9th Kubestronaut in Japan. The Kubestronaut program starts in 2nd season of 2024 and holds a special page at <a href="https://cncf.io/training/kubestronaut/">cncf.io/training/kubestronaut/</a>. The program encourages individuals to take the CNCF Kubernetes examinations and get five certifications: <a href="https://www.cncf.io/training/certification/cka/">CKA</a>, <a href="https://www.cncf.io/training/certification/ckad/">CKAD</a>, <a href="https://www.cncf.io/training/certification/cks/">CKS</a>, <a href="https://www.cncf.io/training/certification/kcna/">KCNA</a>, and <a href="https://www.cncf.io/training/certification/kcsa/">KCSA</a>. It's actually the first program that benefits those who pass the certifications; you get the jacket and have the Kubestronaut network.</p>
<h2>How Kubernetes examinations changed in 2024</h2>
<p>For those who are familiar with or passed the CKA or CKAD tests a few years ago, the test has changed and uses a brand new system to score your submission.</p>
<p>The noticeable changes from 2021:</p>
<ul>
<li>The test runs on a Debian virtual machine, and local remote desktop software is running to connect to the remote desktop.</li>
<li>The local software checks multiple monitors and only allows one monitor.</li>
<li>You upload your ID before the examination and don't have to show it to the interviewer every time.</li>
<li>You can't bring your bookmarks.</li>
<li>Scores are available after around 24 hours of taking the exam.</li>
<li>You got the k=kubectl alias in the terminal.</li>
</ul>
<p>Changes for CKA and CKAD questions:</p>
<ul>
<li>Exam questions include JSON path.</li>
<li>Manifest API deprecation included.</li>
<li>Etcd backup and restore included.</li>
</ul>
<p>These changes have improved the quality of the examination, and it's now a little more complicated to achieve high scores. However, they are still intermediate-level exams. As long as you prepare, passing the exam is easy.</p>
<p>The biggest problem with the exam is that you have to clean your desktop, and you cannot put non-decorated things on it. It means that there are no books, notes, and files on the desktop, no scanner, and no anime figurines :L</p>
<h2>"Let's become Kubestronaut" event</h2>
<p><a href="https://community.cncf.io/events/details/cncf-cloud-native-community-japan-presents-cloud-native-community-japan-lets-become-kubestronaut/"><strong>Cloud Native Community Japan - Let's become Kubestronaut | CNCF</strong>
<em>In-person Event - CNCFのk8s認定試験5種制覇してKubestronautになろう！</em>
<em>community.cncf.io</em></a></p>
<p>I was delighted to attend the event and speak at the discussion panel, which was my first time attending such an event. I said these exams are easy as long as you prepare for them, and let's connect.</p>
<p>I received my Kubestronaut jacket at the event and was very pleased to wear it. I was giving the speech that I don't know the benefit of becoming a Kubestronaut yet at the discussion panel and hoping I got hired soon. It was such a surprise that a interviewer recognized the Kubestronaut jacket and I had great behalf of skills, that I will be starting my new position as a Rust Engineer at Woven by Toyota next week :)</p>
<p>For those who are wondering if there is a benefit to becoming a Kubestronaut, Yes, it will come.</p>
<h2>Kubestronaut Cheat Sheet</h2>
<p>Pre Setup</p>
<ul>
<li><a href="https://kubernetes.io/docs/reference/kubectl/quick-reference/#interacting-with-running-pods">kubectl Quick Reference</a></li>
</ul>
<p>Shell:</p>
<pre><code>export do="--dry-run=client -o yaml"    # k create deploy nginx --image=nginx $do
export now="--force --grace-period 0"   # k delete pod x $now
</code></pre>
<p>Basic</p>
<p>Base64:</p>
<pre><code>echo -n "admin" | base64 -w0
echo -n "YWRtaW4=" | base64 -d
</code></pre>
<p>Find pod by container id:</p>
<pre><code>crictl ps -id &#x3C;container-id>
crictl pods -id &#x3C;pod-id>
</code></pre>
<p>Falco</p>
<ul>
<li><a href="https://falco.org/docs/reference/rules/supported-fields/">Supported Fields for Conditions and Outputs</a></li>
<li>edit /etc/falco/falco_rules.local.yaml</li>
<li>cat /opt/course/2/falco.log.dirty | cut -d" " -f 9 > /opt/course/2/falco.log</li>
<li>The tool cut will split input into fields using space as the delimiter (-d""). We then only select the 9th field using -f 9.</li>
</ul>
<p>API Server</p>
<p>api-server as static pod: /etc/kubernetes/manifests/kube-apiserver.yaml.</p>
<p>API server:</p>
<pre><code>- kube-apiserver
- --authorization-mode=Node,RBAC
- --etcd-servers=https://127.0.0.1:2379
- --enable-admission-plugins=NodeRestriction
# Enable audit logs
- --audit-policy-file=/etc/kubernetes/audit-policy/policy.yaml
- --audit-log-path=/etc/kubernetes/audit-logs/audit.log
- --audit-log-maxsize=7
- --audit-log-maxbackup=2
# expose
- --kubernetes-service-node-port=31000
# CIS benchmark
- --profiling=false
</code></pre>
<p>Pod Security</p>
<ul>
<li><a href="https://kubernetes.io/docs/concepts/security/pod-security-standards/#baseline">Pod Security Standards</a></li>
<li><a href="https://kubernetes.io/docs/concepts/security/pod-security-admission/">Pod Security Admission</a></li>
<li><a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/">Security Context</a></li>
</ul>
<pre><code># MODE must be one of `enforce`, `audit`, or `warn`.
# LEVEL must be one of `privileged`, `baseline`, or `restricted`.
pod-security.kubernetes.io/&#x3C;MODE>: &#x3C;LEVEL>
</code></pre>
<p>CIS Benchmark</p>
<pre><code>kube-bench run --targets=master
kube-bench run --targets=node
</code></pre>
<p>Verify Binaries</p>
<pre><code>sha512sum /usr/bin/kubelet
cat compare | uniq
</code></pre>
<p>Open Policy Agent</p>
<pre><code>k edit blacklistimages pod-trusted-images
k edit constrainttemplates blacklistimages
</code></pre>
<p>Secure Kubernetes Dashboard</p>
<ul>
<li><a href="https://github.com/kubernetes/dashboard/tree/master/docs">https://github.com/kubernetes/dashboard/tree/master/docs</a></li>
<li>k -n kubernetes-dashboard get pod,svc</li>
</ul>
<pre><code>k -n kubernetes-dashboard edit deploy kubernetes-dashboard
</code></pre>
<pre><code>  template:
    spec:
      containers:
      - args:
        - --namespace=kubernetes-dashboard
        - --authentication-mode=token        # change or delete, "token" is default
        - --auto-generate-certificates       # add
        #- --enable-skip-login=true          # delete or set to false
        #- --enable-insecure-login           # delete
        image: kubernetesui/dashboard:v2.0.3
        imagePullPolicy: Always
        name: kubernetes-dashboard
</code></pre>
<p>AppArmor</p>
<ul>
<li>
<p><a href="https://kubernetes.io/docs/tutorials/security/apparmor/">AppArmor</a></p>
<ul>
<li>apparmor_parser</li>
<li>aa-status</li>
</ul>
</li>
<li>
<p><a href="https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/#create-a-pod-that-gets-scheduled-to-your-chosen-node">nodeSelector</a></p>
</li>
</ul>
<p>gVisor</p>
<ul>
<li><a href="https://kubernetes.io/docs/concepts/containers/runtime-class">RuntimeClasses</a></li>
</ul>
<pre><code>apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: gvisor
handler: runsc
</code></pre>
<p>Pod:</p>
<pre><code>apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: gvisor-test
  name: gvisor-test
  namespace: team-purple
spec:
  nodeName: cluster1-node2 # add
  runtimeClassName: gvisor   # add
  containers:
  - image: nginx:1.19.2
    name: gvisor-test
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
</code></pre>
<p>ETCD</p>
<ul>
<li><a href="https://etcd.io/docs/v3.5/op-guide/etcdctl/">etcdctl</a></li>
</ul>
<pre><code>cat /etc/kubernetes/manifests/kube-apiserver.yaml | grep etcd
ETCDCTL_API=3 etcdctl \
--cert /etc/kubernetes/pki/apiserver-etcd-client.crt \
--key /etc/kubernetes/pki/apiserver-etcd-client.key \
--cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/{type}/{namespace}/{name}
</code></pre>
<p>Permission escalation</p>
<pre><code>k -n restricted get role,rolebinding,clusterrole,clusterrolebinding
k -n restricted get secrets -o yaml

k -n restricted get pod -o yaml | grep -i secret

# via volume
k -n restricted exec pod1-fd5d64b9c-pcx6q -- cat /etc/secret-volume/password

# via env
k -n restricted exec pod2-6494f7699b-4hks5 -- env | grep PASS

# via API
k -n restricted exec -it pod3-748b48594-24s76 -- sh
curl https://kubernetes.default/api/v1/namespaces/restricted/secrets -H "Authorization: Bearer $(cat /run/secrets/kubernetes.io/serviceaccount/token)" -k
</code></pre>
<p>Network Policies</p>
<ul>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/network-policies/">Network Policies</a></li>
</ul>
<pre><code>apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: metadata-deny
  namespace: metadata-access
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 192.168.100.21/32
</code></pre>
<pre><code>apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: metadata-allow
  namespace: metadata-access
spec:
  podSelector:
    matchLabels:
      role: metadata-accessor
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 192.168.100.21/32
</code></pre>
<p>Syscall</p>
<pre><code>strace -p &#x3C;pid>
</code></pre>
<p>Ingress TLS</p>
<pre><code>k -n &#x3C;namespace> create secret tls tls-secret --key tls.key --cert tls.crt
</code></pre>
<p>Audit log</p>
<ul>
<li><a href="https://kubernetes.io/docs/tasks/debug-application-cluster/audit/">Audit log</a></li>
</ul>
<pre><code># /etc/kubernetes/audit/policy.yaml
apiVersion: audit.k8s.io/v1
kind: Policy
rules:

# log Secret resources audits, level Metadata
- level: Metadata
  resources:
  - group: ""
    resources: ["secrets"]

# log node related audits, level RequestResponse
- level: RequestResponse
  userGroups: ["system:nodes"]

# for everything else don't log anything
- level: None
</code></pre>
<p>Other</p>
<p><a href="https://kubernetes.io/docs/tasks/administer-cluster/securing-a-cluster/">Securing a Cluster</a>:</p>
<ul>
<li>
<p><a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#noderestriction">NodeRestriction</a></p>
</li>
<li>
<p><a href="https://kubernetes.io/docs/tasks/debug/debug-cluster/audit/#log-backend">Audit logs</a></p>
</li>
<li>
<p><a href="https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/#normal-user">CSR</a></p>
<ul>
<li><a href="https://kubernetes.io/docs/tasks/administer-cluster/certificates/#openssl">openssl</a></li>
</ul>
</li>
<li>
<p><a href="https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/#understanding-the-encryption-at-rest-configuration">EncryptionConfiguration</a></p>
<ul>
<li>kubectl -n one get secrets -o json | kubectl replace -f - recreate secrets</li>
</ul>
</li>
<li>
<p><a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#imagepolicywebhook">ImagePolicyWebhook</a></p>
</li>
</ul>
<p>Notes:</p>
<p>Set client credentials:</p>
<pre><code>k config set-credentials 60099@internal.users --client-key=60099.key --client-certificate=60099.crt
k config set-context 60099@internal.users --cluster=kubernetes --user=60099@internal.users
k config get-contexts
k config use-context 60099@internal.users
</code></pre>
<p>Logs:</p>
<pre><code>crictl logs &#x3C;container-id>
cat /var/log/pods/&#x3C;pod-id>/&#x3C;container-name>/0.log
</code></pre>
<p>Common:</p>
<pre><code>watch crictl ps

# We can contact the Apiserver as the Kubelet by using the Kubelet kubeconfig
export KUBECONFIG=/etc/kubernetes/kubelet.conf
</code></pre>
<p>Docker:</p>
<pre><code># shared PID namespace
docker run --name nginx -d --pid=container:app1 nginx
</code></pre>4:["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$c"}}]
